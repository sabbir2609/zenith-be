# Generated by Django 5.0.7 on 2025-02-07 18:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Permission name.', max_length=50, unique=True)),
                ('description', models.TextField(blank=True, help_text='Permission description.')),
            ],
            options={
                'verbose_name': 'Permission',
                'verbose_name_plural': 'Permissions',
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Role name.', max_length=50, unique=True)),
                ('description', models.TextField(blank=True, help_text='Role description.')),
                ('permissions', models.ManyToManyField(blank=True, related_name='roles', to='accounts.permissions')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, help_text="User's first name.", max_length=255)),
                ('last_name', models.CharField(blank=True, help_text="User's last name.", max_length=255)),
                ('username', models.CharField(blank=True, help_text='Username.', max_length=255, null=True, unique=True)),
                ('email', models.EmailField(db_index=True, help_text="User's email address.", max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the user is active.')),
                ('is_admin', models.BooleanField(default=False, help_text='Whether the user is an admin.')),
                ('is_phone_verified', models.BooleanField(default=False, help_text="Whether the user's phone number is verified.")),
                ('two_factor_enabled', models.BooleanField(default=False, help_text='Whether 2FA is enabled.')),
                ('last_password_reset', models.DateTimeField(blank=True, help_text='Timestamp of last password reset.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='User creation timestamp.')),
                ('last_login', models.DateTimeField(auto_now=True, help_text='Last login timestamp.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('role', models.ForeignKey(blank=True, help_text='User role.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.roles')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, help_text="User's biography.")),
                ('avatar', models.ImageField(blank=True, help_text="User's avatar.", upload_to='avatars/')),
                ('house_apt', models.CharField(blank=True, help_text='House or apartment number.', max_length=255)),
                ('street', models.CharField(blank=True, help_text='Street address.', max_length=255)),
                ('city', models.CharField(blank=True, help_text='City.', max_length=255)),
                ('state', models.CharField(blank=True, help_text='State/Region.', max_length=255)),
                ('zip_code', models.CharField(blank=True, help_text='Postal/ZIP code.', max_length=20)),
                ('country', models.CharField(blank=True, help_text='Country.', max_length=255)),
                ('phone', models.CharField(blank=True, help_text='Phone number.', max_length=20)),
                ('emergency_contact', models.CharField(blank=True, help_text='Emergency contact number.', max_length=20)),
                ('id_proof_type', models.CharField(blank=True, help_text="Type of ID (Passport, Driver's License, etc.).", max_length=50)),
                ('id_proof_number', models.CharField(blank=True, help_text='Identification document number.', max_length=100, unique=True)),
                ('id_proof_image', models.ImageField(blank=True, help_text='ID proof image.', upload_to='id_proofs/')),
                ('loyalty_points', models.IntegerField(default=0, help_text='Loyalty points for returning guests.')),
                ('preferred_payment_method', models.CharField(blank=True, help_text='Preferred payment method (Credit Card, PayPal, etc.).', max_length=50)),
                ('employee_id', models.CharField(blank=True, help_text='Hotel employee ID.', max_length=50, unique=True)),
                ('designation', models.CharField(blank=True, help_text='Job title (Receptionist, Manager, etc.).', max_length=100)),
                ('department', models.CharField(blank=True, help_text='Department (Front Desk, Housekeeping, etc.).', max_length=100)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, help_text='Employee salary.', max_digits=10, null=True)),
                ('hire_date', models.DateField(blank=True, help_text='Employment start date.', null=True)),
                ('shift', models.CharField(blank=True, help_text='Work shift (Morning, Evening, Night).', max_length=20)),
                ('medical_conditions', models.TextField(blank=True, help_text="User's medical conditions.")),
                ('allergies', models.TextField(blank=True, help_text="User's allergies.")),
                ('medications', models.TextField(blank=True, help_text="User's medications.")),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
    ]
