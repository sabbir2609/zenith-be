# Generated by Django 4.2.7 on 2024-01-20 17:54

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the amenity, providing a brief name or description.', max_length=100)),
                ('description', models.CharField(blank=True, help_text='Detailed description of the amenity.', max_length=250, null=True)),
                ('availability', models.BooleanField(default=True, help_text='Indicates whether the amenity is currently available.')),
            ],
            options={
                'verbose_name_plural': 'Amenities',
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField(default=1, help_text='Floor level, indicating the position of the floor in the building.', unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of the floor, providing additional information.', null=True)),
            ],
            options={
                'verbose_name_plural': 'Floors',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_info', models.CharField(blank=True, max_length=100, null=True)),
                ('nid', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('preferences', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='guests')),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Guests',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Installment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installment_type', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third'), ('Full', 'Full')], default='First', max_length=20)),
                ('installment_date', models.DateField(auto_now_add=True)),
                ('installment_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('installment_status', models.CharField(default='Pending', max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Installments',
                'ordering': ['-installment_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField(auto_now_add=True)),
                ('payment_method', models.CharField(max_length=100)),
                ('is_refunded', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refund_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('refund_date', models.DateField(auto_now_add=True)),
                ('refund_method', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Refunds',
                'ordering': ['-refund_date'],
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.CharField(help_text='Type of the room, describing its category or purpose.', max_length=100)),
                ('price', models.DecimalField(decimal_places=2, help_text='Price per night for this room type.', max_digits=10)),
                ('description', models.TextField(blank=True, help_text='Additional details about the room type.', null=True)),
            ],
            options={
                'verbose_name_plural': 'Room Types',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_label', models.CharField(help_text='A label uniquely identifying the room on its floor.', max_length=1)),
                ('capacity', models.PositiveIntegerField(help_text='Maximum number of occupants the room can accommodate.')),
                ('images', models.ImageField(blank=True, help_text="Images showcasing the room's interior or features.", null=True, upload_to='room/')),
                ('description', models.TextField(blank=True, help_text='Additional information or features of the room.', null=True)),
                ('availability', models.BooleanField(default=True, help_text='Indicates whether the room is currently available for booking.')),
                ('floor', models.ForeignKey(help_text='The floor to which this room belongs.', on_delete=django.db.models.deletion.CASCADE, to='main.floor')),
                ('room_type', models.ForeignKey(help_text='The type or category of the room.', on_delete=django.db.models.deletion.CASCADE, to='main.roomtype')),
            ],
            options={
                'verbose_name_plural': 'Rooms',
                'ordering': ['floor', 'room_label'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, message='Rating must be at least 1.'), django.core.validators.MaxValueValidator(10, message='Rating must be at most 10.')])),
                ('comment', models.TextField(blank=True, null=True)),
                ('images', models.ImageField(blank=True, null=True, upload_to='room/review/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.guest')),
                ('likes', models.ManyToManyField(blank=True, related_name='review_likes', to='main.guest')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.room')),
            ],
            options={
                'verbose_name_plural': 'Reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('reservation_status', models.CharField(choices=[('Reserved', 'Reserved'), ('Checked-In', 'Checked-In'), ('Checked-Out', 'Checked-Out'), ('Canceled', 'Canceled')], default='Reserved', max_length=20)),
                ('payment_status', models.CharField(default='Pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('guest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.guest')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.room')),
            ],
            options={
                'verbose_name_plural': 'Reservations',
                'ordering': ['-created_at'],
                'get_latest_by': 'start_date',
            },
        ),
    ]
